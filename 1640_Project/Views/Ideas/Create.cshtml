@model _1640_Project.Models.Idea

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<header>
    <style>
        .slogan {
            font-size: 3rem;
            font-style: italic;
            color: #E83A14;
        }
    </style>
</header>

<div class="w3-container row gutters-sm" style="padding:128px 16px">
    <div class="col-md-4 mb-3">
        <div class="card">
            <div class="card-body">
                <div class="d-flex flex-column align-items-center text-center">
                    <img src="~/Images/thanks.jpg" alt="thanks_img" class="rounded-circle" width="150">
                    <div class="mt-3">
                        <h4 class="slogan">Make your idea, make our future</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-8">
        <div class="card mb-3">
            <div class="card-body">
                <form action="/ideas/create" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Title</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @required="required" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Description</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Content</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.TextBoxFor(model => model.CreateDate, new { @Value = DateTime.Now, @type = "hidden" })
                    @Html.TextBoxFor(model => model.ViewCount, new { @Value = 0, @type = "hidden" })
                    @Html.TextBoxFor(model => model.UserID, new { @Value = Session["CurrentUserID"], @type = "hidden" })
                    @Html.TextBoxFor(model => model.SubmissionID, new { @Value = ViewBag.submit, @type = "hidden" })
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Category</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">File</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            <input type="file" name="file" required /> 
                        </div>
                    </div>
                    <hr>
                    <input type="checkbox" name="check" id="toggle" checked value="" />
                    <span>Argree with <a href="/home/agree" target="_blank">tern of user</a> </span>
                    <hr />
                    <div class="row">
                        <div class="col-sm-12">
                            <button class="btn btn-primary" id="add-button" type="submit">Create</button>
                        </div>
                    </div>
                </form>

            </div>
        </div>

    </div>
</div>


@*@using (Html.BeginForm("Create", "Ideas", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Idea</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-10">
        @Html.TextBoxFor(model => model.CreateDate, new { @Value = DateTime.Now, @type = "hidden" })
        @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
    </div>


    <div class="col-md-10">
        @Html.TextBoxFor(model => model.ViewCount, new { @Value = 0, @type = "hidden" })
        @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
    </div>


    <div class="col-md-10">
        @Html.TextBoxFor(model => model.UserID, new { @Value = Session["CurrentUserID"], @type = "hidden" })
        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="FileSub">File</label>
        <input type="file" name="file" />
    </div>

    <div class="col-md-10">
        @Html.TextBoxFor(model => model.SubmissionID, new { @Value = ViewBag.submit, @type = "hidden" })
        @Html.ValidationMessageFor(model => model.SubmissionID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="checkbox" name="check" id="toggle" checked value="" />
        <span>Argree with <a href="/home/agree" target="_blank">tern of user</a> </span>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="add-button" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Home", "Index", "Home")
</div>*@

<script>
    $('#toggle').click(function () {
        //check if checkbox is checked
        if ($(this).is(':checked')) {

            $('#add-button').removeAttr('disabled'); //enable input

        } else {
            $('#add-button').attr('disabled', true); //disable input
        }
    });
</script>